name: docker-build

on:
  push:
    branches: ['main']

env:
  DOCKER_IMAGE: ghcr.io/overthestream/kupply-back
  DOCKER_CONTAINER: kupply-back

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Setup Docker
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}

      - name: build and push image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  #deploy:
    #needs: build
    #runs-on: self-hosted
    #steps:
      #- name: setup .env
        #run: |
          #echo "DBUrl=${{ secrets.DBURL }}" >> .env
          #echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
          #echo "BUCKET_REGION=${{ secrets.BUCKET_REGION }}" >> .env
          #echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          #echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          #echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          #echo "JWT_CERTIFICATE_SECRET_KEY=${{ secrets.JWT_CERTIFICATE_SECRET_KEY }}" >> .env
          #echo "JWT_REFRESH_SECRET_KEY=${{ secrets.JWT_REFRESH_SECRET_KEY }}" >> .env
          #echo "S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}" >> .env
          #echo "S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}" >> .env
          #cat .env
      #- name: Run Docker
        #run: |
          #docker stop ${{env.DOCKER_CONTAINER}} && docker rm ${{env.DOCKER_CONTAINER}} && docker rmi ${{env.DOCKER_IMAGE}}:latest
          #docker run --env-file ./.env -d -p 8080:8080 --name ${{env.DOCKER_CONTAINER}} --network host --restart always ${{env.DOCKER_IMAGE}}:latest
